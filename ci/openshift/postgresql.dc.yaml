---
kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: "${NAME}-deployment"
  annotations:
    description: Deployment template for a PostgreSQL server with persistent storage for LimeSurvey.
    tags: "${NAME}-${APP_GROUP}-${TAG_NAME}"

objects:
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name:  "${NAME}-${APP_GROUP}-${TAG_NAME}"
      labels:
        app: "${NAME}-${APP_GROUP}-${TAG_NAME}"
        app-group: "${APP_GROUP}"
        template: "${NAME}-deployment"
      annotations: {}
    spec:
      strategy:
        type: Recreate
        recreateParams:
          timeoutSeconds: 600
        resources: {}
        activeDeadlineSeconds: 21600
      replicas: 1
      revisionHistoryLimit: 10
      test: false
      selector:
        app: "${NAME}-${APP_GROUP}-${TAG_NAME}"
        deploymentconfig: "${NAME}-${APP_GROUP}-${TAG_NAME}"
      template:
        metadata:
          creationTimestamp:
          labels:
            app: "${NAME}-${APP_GROUP}-${TAG_NAME}"
            deploymentconfig: "${NAME}-${APP_GROUP}-${TAG_NAME}"
          annotations: {}
        spec:
          volumes:
            - name: "${NAME}-${APP_GROUP}-${TAG_NAME}-volume"
              persistentVolumeClaim:
                claimName: "${NAME}-${APP_GROUP}-${TAG_NAME}-data"
          containers:
            - name: "${NAME}-${APP_GROUP}-${TAG_NAME}"
              image: "image-registry.openshift-image-registry.svc:5000/openshift/postgresql:12"
              ports:
                - containerPort: 5433
                  protocol: TCP
              env:
                - name: POSTGRESQL_DATABASE
                  valueFrom:
                    secretKeyRef:
                      name: "${NAME}-${APP_GROUP}-${TAG_NAME}-secret"
                      key: database-name
                - name: POSTGRESQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: "${NAME}-${APP_GROUP}-${TAG_NAME}-secret"
                      key: database-password
                - name: POSTGRESQL_USER
                  valueFrom:
                    secretKeyRef:
                      name: "${NAME}-${APP_GROUP}-${TAG_NAME}-secret"
                      key: database-user
              resources:
                limits:
                  memory: "${MEMORY_LIMIT}"
              volumeMounts:
                - name: "${NAME}-${APP_GROUP}-${TAG_NAME}-volume"
                  mountPath: "/var/lib/pgsql/data/limesurvey"
              livenessProbe:
                initialDelaySeconds: 30
                tcpSocket:
                  port: 5433
                timeoutSeconds: 1
              readinessProbe:
                exec:
                  command:
                    - "/bin/bash"
                    - "-c"
                    - pg_isready -h localhost -p 5433
                initialDelaySeconds: 5
                timeoutSeconds: 1
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              terminationMessagePath: "/dev/termination-log"
              terminationMessagePolicy: File
              imagePullPolicy: IfNotPresent
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler

  - kind: Secret
    apiVersion: v1
    metadata:
      name: "${NAME}-${APP_GROUP}-${TAG_NAME}-secret"
      labels:
        app: "${NAME}-${APP_GROUP}-${TAG_NAME}"
        app-group: "${APP_GROUP}"
        template: "${NAME}-deployment"
      annotations:
        description: Database credentials and name.
        template.openshift.io/expose-database_name: "{.data['database-name']}"
        template.openshift.io/expose-password: "{.data['database-password']}"
        template.openshift.io/expose-username: "{.data['database-user']}"
    stringData:
      database-name: "${NAME}"
      database-password: "${POSTGRESQL_PASSWORD}"
      database-user: "${NAME}"

  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: "${NAME}-${APP_GROUP}-${TAG_NAME}-data"
      labels:
        app: "${NAME}-${APP_GROUP}-${TAG_NAME}"
        app-group: "${APP_GROUP}"
        template: "${NAME}-deployment"
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: "${DB_VOLUME_CAPACITY}"
      storageClassName: "${PERSISTENT_VOLUME_CLASS}"

  - kind: Service
    apiVersion: v1
    metadata:
      name: "${NAME}-${APP_GROUP}-${TAG_NAME}"
      labels:
        app: "${NAME}-${APP_GROUP}-${TAG_NAME}"
        app-group: "${APP_GROUP}"
        template: ${NAME}-deployment
      annotations: {}
    spec:
      ports:
        - name: "${NAME}-${APP_GROUP}-${TAG_NAME}"
          protocol: TCP
          port: 5433
          targetPort: 5433
      selector:
        app: "${NAME}-${APP_GROUP}-${TAG_NAME}"
        deploymentconfig: "${NAME}-${APP_GROUP}-${TAG_NAME}"
      type: ClusterIP
      sessionAffinity: None
    status:
      loadBalancer: {}

parameters:
  - description: A descriptive name that sets a prefix and distinguishes it from other objects
    displayName: Name 
    name: NAME
    required: true
    value: postgresql

  - description: A name that helps group objects related to the same app
    displayName: App Group
    name: APP_GROUP
    required: true
    value: limesurvey

  - description: Should reflect the environment where the deploymentconfig lives
    displayName: Environment TAG name
    name: TAG_NAME
    required: true
    value: dev
    
  - description: The short-name of the Survey Service, lower-case with hyphen.
    displayName: Survey Name
    name: SURVEY_NAME
    required: true
    value: sdd

  - description: Maximum amount of memory the container can use.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    required: true
    value: 512Mi

  - description: Password for the PostgreSQL connection user.
    displayName: PostgreSQL Connection Password
    from: "[a-zA-Z0-9]{16}"
    generate: expression
    name: POSTGRESQL_PASSWORD
    required: true

  - description: Volume space available for data, e.g. 512Mi, 2Gi.
    displayName: Database Volume Capacity
    name: DB_VOLUME_CAPACITY
    required: true
    value: 2Gi

  - description: Block storage has a high performance and appropriate for transactional databases
    displayName: Persistent Volume Class name
    name: PERSISTENT_VOLUME_CLASS
    required: false
    value: netapp-block-standard